/* begin type creator */
@each $type in map-keys($fontSizes) {
  $fontFace: "" !default;

  // get font faces
  @if variable-exists($fontFaces) {
    @if map-has-key($fontFaces, $type) {
      $fontFace: map-get($fontFaces, $type);
    }
  }

  // get font size
  $fontSize: map-get($fontSizes, $type);

  // set type baseline padding
  #{$type} {
    @if $fontFace != "" {
      font-family: $fontFace;
    }

    // set baseline spacing
    @include vr($fontSize);

    // add conversion classes
    @each $tp in map-keys($fontSizes) {
      // get font size
      $fs: map-get($fontSizes, $tp);

      @if $type != $tp and $fs < $fontSize {
        // assign utility class and parse underscore
        &.#{$tp} {
          @include vr($fs, $from: $fontSize);

          // set vertical center utility
          &.v-center {
            @include vr($fs, $from: $fontSize, $baseline: false);
          }
        }
      }
    }

    // set vertical center to bottom utility
    &.v-bottom {
      transform: translateY($base-cap-height);
    }
  }

  .#{$type} {
    @extend #{$type};
  }
}